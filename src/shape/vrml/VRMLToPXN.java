package shape.vrml;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;

/**
 * Limitations:
 *  - Only support IndexedFaceSet geometry type, and only for all-triangular
 *    faces with three coordIndices
 * 
 * Improvements:
 *  - Surface normals for vertices aren't specified in VRML, so need to figure
 *    out a workaround - use average surface normal for attached polygons.
 *  - When writing IndexedFaceSet to a <mesh>, we write a new tristrip for each
 *    face - a smarter way would be to detect connected triangular faces and
 *    write longer strips
 * 
 * 
 * When using new VRML files from new sources, check the names that are applied
 * by default to nodes and include pattern recognition in nameIsAutoGenerated
 * method so we can recognise these nodes. This means that unnecessary levels
 * in the scene graph can be pruned UNLESS they have been given a name by the 
 * model author.
 * 
 * @author nickrowell
 */
public class VRMLToPXN
{
    
    /** Handle to input VRML file. */
    static File wrl_file;
    /** Top level PXN output directory. */
    static File pxn_file;
    
    
    
    public static void main(String[] args) throws FileNotFoundException, IOException
    {
        // Basic idea:
        // 1) Parse VRML file and construct internal representation of VRML model
        //    in terms of linked nodes
        // 2) Map nodes of VRML model to PXN
        // 3) Write out PXN
        //
        //
        
//        wrl_file = new File("/opt/pangu/Models/Real/Curiosity/VRML/test_VRMLtoPXN/merged/rovermerged.wrl");
        wrl_file = new File("/opt/pangu/Models/Real/Curiosity/VRML/Rover.wrl");
        
        VRML_Model wrl = new VRML_Model(wrl_file);
        
        System.out.println("Finished parsing VRML file.");
        System.out.println("Number of top level nodes = "+wrl.topLevelNodes.size());
        System.out.println("Number of defined nodes = "+wrl.DEFs.size());
        
        wrl.writePXN(new File("/opt/pangu/Models/Real/Curiosity/PXN/"));
        
    }
    
    
    
    
}

